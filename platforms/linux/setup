#!/usr/bin/env bash

is_root() {
if [[ $EUID -ne 0 ]]; then
    printf "\n\n\n\e[41m  \e[0m Hi \e[1;37m$USER\e[0m, please run \e[1;37mDuckieTV\e[0m script as \e[1;37mroot\e[0m or with \e[1;37msudo\e[0m\n\e[41m\e[0m\n\n\n"
	exit 1
fi
}

greet () {
	printf "\n\n\n\e[44m  \e[0m Hi, This will install \e[1;37mDuckieTV{{NIGHTLY}} {{VERSION}}\e[0m on your computer.\n\n\n"
}

remove_previous_version () {
    if [[ -f "/usr/bin/nw.pak" ]]; then
        /bin/rm -rf /usr/bin/DuckieTV /usr/bin/nw.pak /usr/share/applications/DuckieTV.desktop usr/share/menu/DuckieTV /usr/share/pixmaps/DuckieTV.png /usr/share/pixmaps/DuckieTV.xpm > /dev/null 2>&1
    fi
}

check_dependencies_and_run () {

	printf "\n\n\n\e[43m  \e[0m Checking for dependencies.\n\n\n"
  DEPS1='NOK';
  DEPS2='NOK';
	for i in `find /bin /usr/bin -name "gconftool*"`; do
		if [[ ${i} =~ "gconf" ]]; then
			DEPS1='OK'
		fi
	done;

  for i in `find /bin /usr/bin -name "xdg-open"`; do
    if [[ ${i} =~ "xdg-open" ]]; then
      DEPS2='OK'
    fi
  done;

	if [[ ( $DEPS1 = 'OK' ) && ( $DEPS2 = 'OK' ) ]]; then
	    remove_previous_version;
		install_app;
	else
    if [[ $DEPS1 = 'NOK' ]]; then
		  printf "\n\n\n\e[41m  \e[0m It seems you are missing \e[1;37mgconf\e[0m. Please install it using your package manager\n\n\n"
	  fi
    if [[ $DEPS2 = 'NOK' ]]; then
      printf "\n\n\n\e[41m  \e[0m It seems you are missing \e[1;37mxdg-utils\e[0m. Please install it using package manager\n\n\n"
    fi


  fi
}

install_app () {
	printf "\e[42m  \e[0m It seems that all dependencies met, Install? [y/n]"
	read INST
	if [ $INST = 'y' -o $INST = 'Y' ]; then
        printf "\n\n\n\e[43m  \e[0m INSTALLING...\n\n\n"
        /bin/cp -rv DuckieTV /opt
        /bin/cp -rv share /usr
        /bin/ln -s /opt/DuckieTV/DuckieTV /usr/bin/DuckieTV

        paths=(
          "/lib/x86_64-linux-gnu/libudev.so.1" # Ubuntu, Xubuntu, Mint
          "/usr/lib64/libudev.so.1" # SUSE, Fedora
          "/usr/lib/libudev.so.1" # Arch, Fedora 32bit
          "/lib/i386-linux-gnu/libudev.so.1" # Ubuntu 32bit
        )

        for i in "${paths[@]}"
        do
          if [ -f $i ]
          then
            mkdir /opt/DuckieTV/lib
            ln -sf "$i" /opt/DuckieTV/lib/libudev.so.0
            break
          fi
        done

		printf "\n\n\n\e[42m  \e[0m Congrats! You can now find \e[1;37mDuckieTV{{NIGHTLY}} {{VERSION}}\e[0m in your menu.\n\n\n"
	fi
}

is_root;

if [ "${1}" = "--uninstall" ]; then
	/bin/rm -rf /opt/DuckieTV /usr/share/applications/DuckieTV.desktop /usr/share/menu/DuckieTV /usr/bin/DuckieTV
	printf '\n\n\n\e[44m  \e[0m Congrats! DuckieTV removed from your machine.\n\n\n'
	exit 1
fi

# RUN ALL
greet;
check_dependencies_and_run;